final vs immutability : https://www.geeksforgeeks.org/final-vs-immutability-java/

for for variable: 
final : In Java, final is a modifier which is used for class, method and variable also. When a variable is declared with final keyword, it’s value(memory location) can’t be modified, essentially, a constant.

Immutability : In simple terms, immutability means unchanging over time or unable to be changed. In Java, we know that String objects are immutable means we cant change anything to the existing String objects.

Differences between final and immutability

1. final means that you can’t change the object’s reference to point to another reference or another object, but you can still mutate its state (using setter methods e.g). Whereas immutable means that the object’s actual value can’t be changed, but you can change its reference to another one.
2. final modifier is applicable for variable but not for objects, Whereas immutability applicable for an object but not for variables.
3. By declaring a reference variable as final, we won’t get any immutability nature, Even though reference variable is final. We can perform any type of change in the corresponding Object. But we cant perform reassignment for that variable.
4. final ensures that the address of the object remains the same whereas the Immutable suggests that we can’t change the state of the object once created.

final for class 
the class could not be extended, the class still could extend other class

final for method:
the method could not be over written